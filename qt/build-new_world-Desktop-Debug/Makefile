#############################################################################
# Makefile for building: new_world
# Generated by qmake (2.01a) (Qt 4.8.6) on: ven. mars 3 14:43:33 2017
# Project:  ../new_world_v1/new_world.pro
# Template: app
# Command: /usr/lib/i386-linux-gnu/qt4/bin/qmake -spec /usr/share/qt4/mkspecs/linux-g++ CONFIG+=debug -o Makefile ../new_world_v1/new_world.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I../new_world_v1 -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -I. -I../new_world_v1 -I.
LINK          = g++
LFLAGS        = 
LIBS          = $(SUBLIBS)  -L/usr/lib/i386-linux-gnu -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/lib/i386-linux-gnu/qt4/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = ../new_world_v1/main.cpp \
		../new_world_v1/mainwindow.cpp \
		../new_world_v1/gestionaires.cpp \
		../new_world_v1/gestionproduit.cpp \
		../new_world_v1/gestiondupersonnel.cpp \
		../new_world_v1/gestiondesstatistiques.cpp \
		../new_world_v1/controleurs.cpp \
		../new_world_v1/controlepointdevente.cpp \
		../new_world_v1/controledesproducteurs.cpp moc_mainwindow.cpp \
		moc_gestionaires.cpp \
		moc_gestionproduit.cpp \
		moc_gestiondupersonnel.cpp \
		moc_gestiondesstatistiques.cpp \
		moc_controleurs.cpp \
		moc_controlepointdevente.cpp \
		moc_controledesproducteurs.cpp
OBJECTS       = main.o \
		mainwindow.o \
		gestionaires.o \
		gestionproduit.o \
		gestiondupersonnel.o \
		gestiondesstatistiques.o \
		controleurs.o \
		controlepointdevente.o \
		controledesproducteurs.o \
		moc_mainwindow.o \
		moc_gestionaires.o \
		moc_gestionproduit.o \
		moc_gestiondupersonnel.o \
		moc_gestiondesstatistiques.o \
		moc_controleurs.o \
		moc_controlepointdevente.o \
		moc_controledesproducteurs.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		../new_world_v1/new_world.pro
QMAKE_TARGET  = new_world
DESTDIR       = 
TARGET        = new_world

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_mainwindow.h ui_gestionaires.h ui_gestionproduit.h ui_gestiondupersonnel.h ui_gestiondesstatistiques.h ui_controleurs.h ui_controlepointdevente.h ui_controledesproducteurs.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)
	{ test -n "$(DESTDIR)" && DESTDIR="$(DESTDIR)" || DESTDIR=.; } && test $$(gdb --version | sed -e 's,[^0-9][^0-9]*\([0-9]\)\.\([0-9]\).*,\1\2,;q') -gt 72 && gdb --nx --batch --quiet -ex 'set confirm off' -ex "save gdb-index $$DESTDIR" -ex quit '$(TARGET)' && test -f $(TARGET).gdb-index && objcopy --add-section '.gdb_index=$(TARGET).gdb-index' --set-section-flags '.gdb_index=readonly' '$(TARGET)' '$(TARGET)' && rm -f $(TARGET).gdb-index || true

Makefile: ../new_world_v1/new_world.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/i386-linux-gnu/libQtGui.prl \
		/usr/lib/i386-linux-gnu/libQtCore.prl
	$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ CONFIG+=debug -o Makefile ../new_world_v1/new_world.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_phonon.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/debug.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/shared.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/i386-linux-gnu/libQtGui.prl:
/usr/lib/i386-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ CONFIG+=debug -o Makefile ../new_world_v1/new_world.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/new_world1.0.0 || $(MKDIR) .tmp/new_world1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/new_world1.0.0/ && $(COPY_FILE) --parents ../new_world_v1/mainwindow.h ../new_world_v1/gestionaires.h ../new_world_v1/gestionproduit.h ../new_world_v1/gestiondupersonnel.h ../new_world_v1/gestiondesstatistiques.h ../new_world_v1/controleurs.h ../new_world_v1/controlepointdevente.h ../new_world_v1/controledesproducteurs.h .tmp/new_world1.0.0/ && $(COPY_FILE) --parents ../new_world_v1/main.cpp ../new_world_v1/mainwindow.cpp ../new_world_v1/gestionaires.cpp ../new_world_v1/gestionproduit.cpp ../new_world_v1/gestiondupersonnel.cpp ../new_world_v1/gestiondesstatistiques.cpp ../new_world_v1/controleurs.cpp ../new_world_v1/controlepointdevente.cpp ../new_world_v1/controledesproducteurs.cpp .tmp/new_world1.0.0/ && $(COPY_FILE) --parents ../new_world_v1/mainwindow.ui ../new_world_v1/gestionaires.ui ../new_world_v1/gestionproduit.ui ../new_world_v1/gestiondupersonnel.ui ../new_world_v1/gestiondesstatistiques.ui ../new_world_v1/controleurs.ui ../new_world_v1/controlepointdevente.ui ../new_world_v1/controledesproducteurs.ui .tmp/new_world1.0.0/ && (cd `dirname .tmp/new_world1.0.0` && $(TAR) new_world1.0.0.tar new_world1.0.0 && $(COMPRESS) new_world1.0.0.tar) && $(MOVE) `dirname .tmp/new_world1.0.0`/new_world1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/new_world1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_mainwindow.cpp moc_gestionaires.cpp moc_gestionproduit.cpp moc_gestiondupersonnel.cpp moc_gestiondesstatistiques.cpp moc_controleurs.cpp moc_controlepointdevente.cpp moc_controledesproducteurs.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_mainwindow.cpp moc_gestionaires.cpp moc_gestionproduit.cpp moc_gestiondupersonnel.cpp moc_gestiondesstatistiques.cpp moc_controleurs.cpp moc_controlepointdevente.cpp moc_controledesproducteurs.cpp
moc_mainwindow.cpp: ../new_world_v1/mainwindow.h
	/usr/lib/i386-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) ../new_world_v1/mainwindow.h -o moc_mainwindow.cpp

moc_gestionaires.cpp: ../new_world_v1/gestionaires.h
	/usr/lib/i386-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) ../new_world_v1/gestionaires.h -o moc_gestionaires.cpp

moc_gestionproduit.cpp: ../new_world_v1/gestionproduit.h
	/usr/lib/i386-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) ../new_world_v1/gestionproduit.h -o moc_gestionproduit.cpp

moc_gestiondupersonnel.cpp: ../new_world_v1/gestiondupersonnel.h
	/usr/lib/i386-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) ../new_world_v1/gestiondupersonnel.h -o moc_gestiondupersonnel.cpp

moc_gestiondesstatistiques.cpp: ../new_world_v1/gestiondesstatistiques.h
	/usr/lib/i386-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) ../new_world_v1/gestiondesstatistiques.h -o moc_gestiondesstatistiques.cpp

moc_controleurs.cpp: ../new_world_v1/controleurs.h
	/usr/lib/i386-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) ../new_world_v1/controleurs.h -o moc_controleurs.cpp

moc_controlepointdevente.cpp: ../new_world_v1/controlepointdevente.h
	/usr/lib/i386-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) ../new_world_v1/controlepointdevente.h -o moc_controlepointdevente.cpp

moc_controledesproducteurs.cpp: ../new_world_v1/controledesproducteurs.h
	/usr/lib/i386-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) ../new_world_v1/controledesproducteurs.h -o moc_controledesproducteurs.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_mainwindow.h ui_gestionaires.h ui_gestionproduit.h ui_gestiondupersonnel.h ui_gestiondesstatistiques.h ui_controleurs.h ui_controlepointdevente.h ui_controledesproducteurs.h
compiler_uic_clean:
	-$(DEL_FILE) ui_mainwindow.h ui_gestionaires.h ui_gestionproduit.h ui_gestiondupersonnel.h ui_gestiondesstatistiques.h ui_controleurs.h ui_controlepointdevente.h ui_controledesproducteurs.h
ui_mainwindow.h: ../new_world_v1/mainwindow.ui
	/usr/lib/i386-linux-gnu/qt4/bin/uic ../new_world_v1/mainwindow.ui -o ui_mainwindow.h

ui_gestionaires.h: ../new_world_v1/gestionaires.ui
	/usr/lib/i386-linux-gnu/qt4/bin/uic ../new_world_v1/gestionaires.ui -o ui_gestionaires.h

ui_gestionproduit.h: ../new_world_v1/gestionproduit.ui
	/usr/lib/i386-linux-gnu/qt4/bin/uic ../new_world_v1/gestionproduit.ui -o ui_gestionproduit.h

ui_gestiondupersonnel.h: ../new_world_v1/gestiondupersonnel.ui
	/usr/lib/i386-linux-gnu/qt4/bin/uic ../new_world_v1/gestiondupersonnel.ui -o ui_gestiondupersonnel.h

ui_gestiondesstatistiques.h: ../new_world_v1/gestiondesstatistiques.ui
	/usr/lib/i386-linux-gnu/qt4/bin/uic ../new_world_v1/gestiondesstatistiques.ui -o ui_gestiondesstatistiques.h

ui_controleurs.h: ../new_world_v1/controleurs.ui
	/usr/lib/i386-linux-gnu/qt4/bin/uic ../new_world_v1/controleurs.ui -o ui_controleurs.h

ui_controlepointdevente.h: ../new_world_v1/controlepointdevente.ui
	/usr/lib/i386-linux-gnu/qt4/bin/uic ../new_world_v1/controlepointdevente.ui -o ui_controlepointdevente.h

ui_controledesproducteurs.h: ../new_world_v1/controledesproducteurs.ui
	/usr/lib/i386-linux-gnu/qt4/bin/uic ../new_world_v1/controledesproducteurs.ui -o ui_controledesproducteurs.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

####### Compile

main.o: ../new_world_v1/main.cpp ../new_world_v1/mainwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o ../new_world_v1/main.cpp

mainwindow.o: ../new_world_v1/mainwindow.cpp ../new_world_v1/mainwindow.h \
		ui_mainwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainwindow.o ../new_world_v1/mainwindow.cpp

gestionaires.o: ../new_world_v1/gestionaires.cpp ../new_world_v1/gestionaires.h \
		ui_gestionaires.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gestionaires.o ../new_world_v1/gestionaires.cpp

gestionproduit.o: ../new_world_v1/gestionproduit.cpp ../new_world_v1/gestionproduit.h \
		ui_gestionproduit.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gestionproduit.o ../new_world_v1/gestionproduit.cpp

gestiondupersonnel.o: ../new_world_v1/gestiondupersonnel.cpp ../new_world_v1/gestiondupersonnel.h \
		ui_gestiondupersonnel.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gestiondupersonnel.o ../new_world_v1/gestiondupersonnel.cpp

gestiondesstatistiques.o: ../new_world_v1/gestiondesstatistiques.cpp ../new_world_v1/gestiondesstatistiques.h \
		ui_gestiondesstatistiques.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gestiondesstatistiques.o ../new_world_v1/gestiondesstatistiques.cpp

controleurs.o: ../new_world_v1/controleurs.cpp ../new_world_v1/controleurs.h \
		ui_controleurs.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o controleurs.o ../new_world_v1/controleurs.cpp

controlepointdevente.o: ../new_world_v1/controlepointdevente.cpp ../new_world_v1/controlepointdevente.h \
		ui_controlepointdevente.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o controlepointdevente.o ../new_world_v1/controlepointdevente.cpp

controledesproducteurs.o: ../new_world_v1/controledesproducteurs.cpp ../new_world_v1/controledesproducteurs.h \
		ui_controledesproducteurs.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o controledesproducteurs.o ../new_world_v1/controledesproducteurs.cpp

moc_mainwindow.o: moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainwindow.o moc_mainwindow.cpp

moc_gestionaires.o: moc_gestionaires.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_gestionaires.o moc_gestionaires.cpp

moc_gestionproduit.o: moc_gestionproduit.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_gestionproduit.o moc_gestionproduit.cpp

moc_gestiondupersonnel.o: moc_gestiondupersonnel.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_gestiondupersonnel.o moc_gestiondupersonnel.cpp

moc_gestiondesstatistiques.o: moc_gestiondesstatistiques.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_gestiondesstatistiques.o moc_gestiondesstatistiques.cpp

moc_controleurs.o: moc_controleurs.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_controleurs.o moc_controleurs.cpp

moc_controlepointdevente.o: moc_controlepointdevente.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_controlepointdevente.o moc_controlepointdevente.cpp

moc_controledesproducteurs.o: moc_controledesproducteurs.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_controledesproducteurs.o moc_controledesproducteurs.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

